package corba.exchange_domain.iExchangePackage;


/**
* exchange_domain/iExchangePackage/customerHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from stockexchange/exchange.idl
* Wednesday, July 1, 2015 11:19:20 PM EDT
*/

abstract public class customerHelper
{
  private static String  _id = "IDL:exchange_domain/iExchange/customer:1.0";

  public static void insert (org.omg.CORBA.Any a, corba.exchange_domain.iExchangePackage.customer that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static corba.exchange_domain.iExchangePackage.customer extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [7];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[0] = new org.omg.CORBA.StructMember (
            "name",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[1] = new org.omg.CORBA.StructMember (
            "street1",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[2] = new org.omg.CORBA.StructMember (
            "street2",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[3] = new org.omg.CORBA.StructMember (
            "city",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[4] = new org.omg.CORBA.StructMember (
            "province",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[5] = new org.omg.CORBA.StructMember (
            "postalCode",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[6] = new org.omg.CORBA.StructMember (
            "country",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (corba.exchange_domain.iExchangePackage.customerHelper.id (), "customer", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static corba.exchange_domain.iExchangePackage.customer read (org.omg.CORBA.portable.InputStream istream)
  {
    corba.exchange_domain.iExchangePackage.customer value = new corba.exchange_domain.iExchangePackage.customer ();
    value.name = istream.read_string ();
    value.street1 = istream.read_string ();
    value.street2 = istream.read_string ();
    value.city = istream.read_string ();
    value.province = istream.read_string ();
    value.postalCode = istream.read_string ();
    value.country = istream.read_string ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, corba.exchange_domain.iExchangePackage.customer value)
  {
    ostream.write_string (value.name);
    ostream.write_string (value.street1);
    ostream.write_string (value.street2);
    ostream.write_string (value.city);
    ostream.write_string (value.province);
    ostream.write_string (value.postalCode);
    ostream.write_string (value.country);
  }

}
