package corba.exchange_domain;


/**
* exchange_domain/_iExchangeStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from stockexchange/exchange.idl
* Wednesday, July 1, 2015 11:19:19 PM EDT
*/

public class _iExchangeStub extends org.omg.CORBA.portable.ObjectImpl implements iExchange
{


  // update share price
  public boolean updateSharePrice (String symbol, float price)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateSharePrice", true);
                $out.write_string (symbol);
                $out.write_float (price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return updateSharePrice (symbol, price        );
            } finally {
                _releaseReply ($in);
            }
  } // updateSharePrice

  public boolean registerBusiness (String symbol, float price)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("registerBusiness", true);
                $out.write_string (symbol);
                $out.write_float (price);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return registerBusiness (symbol, price        );
            } finally {
                _releaseReply ($in);
            }
  } // registerBusiness

  public boolean unregister (String symbol)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("unregister", true);
                $out.write_string (symbol);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return unregister (symbol        );
            } finally {
                _releaseReply ($in);
            }
  } // unregister

  public void clientOrder (corba.exchange_domain.iExchangePackage.corShareItem[] corShares, corba.exchange_domain.iExchangePackage.customer corCustomer)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("clientOrder", true);
                corba.exchange_domain.iExchangePackage.lstCorShareItemHelper.write ($out, corShares);
                corba.exchange_domain.iExchangePackage.customerHelper.write ($out, corCustomer);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                clientOrder (corShares, corCustomer        );
            } finally {
                _releaseReply ($in);
            }
  } // clientOrder

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:exchange_domain/iExchange:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _iExchangeStub
