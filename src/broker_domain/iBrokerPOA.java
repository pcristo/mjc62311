package broker_domain;


/**
* broker_domain/iBrokerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from stockexchange/broker.idl
* Thursday, July 2, 2015 5:52:00 PM EDT
*/

public abstract class iBrokerPOA extends org.omg.PortableServer.Servant
 implements broker_domain.iBrokerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("sellShares", new java.lang.Integer (0));
    _methods.put ("registerCustomer", new java.lang.Integer (1));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // broker_domain/iBroker/sellShares
       {
         String ticker = in.read_string ();
         String shareType = in.read_string ();
         int quantity = in.read_long ();
         int custID = in.read_long ();
         boolean $result = false;
         $result = this.sellShares (ticker, shareType, quantity, custID);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 1:  // broker_domain/iBroker/registerCustomer
       {
         String name = in.read_string ();
         String street = in.read_string ();
         String city = in.read_string ();
         String province = in.read_string ();
         String postalCode = in.read_string ();
         String country = in.read_string ();
         int $result = (int)0;
         $result = this.registerCustomer (name, street, city, province, postalCode, country);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:broker_domain/iBroker:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public iBroker _this() 
  {
    return iBrokerHelper.narrow(
    super._this_object());
  }

  public iBroker _this(org.omg.CORBA.ORB orb) 
  {
    return iBrokerHelper.narrow(
    super._this_object(orb));
  }


} // class iBrokerPOA
